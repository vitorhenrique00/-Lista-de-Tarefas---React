{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\github\\\\meu-app-react\\\\src\\\\pages\\\\Completed.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Completed.jsx\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Completed() {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    const saved = localStorage.getItem(\"tasks\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const completedTasks = tasks.filter(t => t.completed);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"completed\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tarefas Conclu\\xEDdas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), completedTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nenhuma tarefa conclu\\xEDda ainda.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: completedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"completed\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            display: \"block\",\n            color: \"#666\",\n            fontSize: \"12px\",\n            marginTop: \"4px\"\n          },\n          children: [\"\\u2705 Finalizada em: \", task.finishedAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Completed, \"w9gtmXp1QedgpSBiqOQKEbh3Fzs=\");\n_c = Completed;\nexport default Completed;\nvar _c;\n$RefreshReg$(_c, \"Completed\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Completed","_s","tasks","setTasks","saved","localStorage","getItem","JSON","parse","completedTasks","filter","t","completed","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","task","index","text","style","display","color","fontSize","marginTop","finishedAt","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/github/meu-app-react/src/pages/Completed.jsx"],"sourcesContent":["// src/pages/Completed.jsx\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Completed() {\r\n  const [tasks, setTasks] = useState(() => {\r\n    const saved = localStorage.getItem(\"tasks\");\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n\r\n  const completedTasks = tasks.filter((t) => t.completed);\r\n\r\n  return (\r\n    <section id=\"completed\">\r\n      <h1>Tarefas Concluídas</h1>\r\n      {completedTasks.length === 0 ? (\r\n        <p>Nenhuma tarefa concluída ainda.</p>\r\n      ) : (\r\n        <ul className=\"task-list\">\r\n          {completedTasks.map((task, index) => (\r\n            <li key={index} className=\"completed\">\r\n              <span>{task.text}</span>\r\n              <small\r\n                style={{\r\n                  display: \"block\",\r\n                  color: \"#666\",\r\n                  fontSize: \"12px\",\r\n                  marginTop: \"4px\"\r\n                }}\r\n              >\r\n                ✅ Finalizada em: {task.finishedAt}\r\n              </small>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Completed;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,MAAM;IACvC,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,EAAE;EACvC,CAAC,CAAC;EAEF,MAAMK,cAAc,GAAGP,KAAK,CAACQ,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,CAAC;EAEvD,oBACEb,OAAA;IAASc,EAAE,EAAC,WAAW;IAAAC,QAAA,gBACrBf,OAAA;MAAAe,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BT,cAAc,CAACU,MAAM,KAAK,CAAC,gBAC1BpB,OAAA;MAAAe,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtCnB,OAAA;MAAIqB,SAAS,EAAC,WAAW;MAAAN,QAAA,EACtBL,cAAc,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BxB,OAAA;QAAgBqB,SAAS,EAAC,WAAW;QAAAN,QAAA,gBACnCf,OAAA;UAAAe,QAAA,EAAOQ,IAAI,CAACE;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBnB,OAAA;UACE0B,KAAK,EAAE;YACLC,OAAO,EAAE,OAAO;YAChBC,KAAK,EAAE,MAAM;YACbC,QAAQ,EAAE,MAAM;YAChBC,SAAS,EAAE;UACb,CAAE;UAAAf,QAAA,GACH,wBACkB,EAACQ,IAAI,CAACQ,UAAU;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA,GAXDK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd;AAACjB,EAAA,CAlCQD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}